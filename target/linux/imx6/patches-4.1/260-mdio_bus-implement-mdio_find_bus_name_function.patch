Index: linux-4.1.6/drivers/net/phy/mdio_bus.c
===================================================================
--- linux-4.1.6.orig/drivers/net/phy/mdio_bus.c 2015-09-18 16:46:59.495347074 -0700
+++ linux-4.1.6/drivers/net/phy/mdio_bus.c      2015-09-23 15:43:56.230993390 -0700
@@ -190,6 +190,25 @@
 }
 EXPORT_SYMBOL(of_mdio_find_bus);

+/* Helper function for of_mdio_find_bus_name */
+static int of_mdio_bus_match_name(struct device *dev, const void *name)
+{
+       struct mii_bus *bus = to_mii_bus(dev);
+
+       return (strcmp(bus->name, (char *)name) == 0);
+}
+
+struct mii_bus *of_mdio_find_bus_name(const char *name)
+{
+       struct device *d;
+
+       d = class_find_device(&mdio_bus_class, NULL, name,
+                             of_mdio_bus_match_name);
+
+       return d ? to_mii_bus(d) : NULL;
+}
+EXPORT_SYMBOL(of_mdio_find_bus_name);
+
 /* Walk the list of subnodes of a mdio bus and look for a node that matches the
  * phy's address with its 'reg' property. If found, set the of_node pointer for
  * the phy. This allows auto-probed pyh devices to be supplied with information
Index: linux-4.1.6/include/linux/of_mdio.h
===================================================================
--- linux-4.1.6.orig/include/linux/of_mdio.h    2015-08-16 20:52:51.000000000 -0700
+++ linux-4.1.6/include/linux/of_mdio.h 2015-09-23 15:15:40.491042310 -0700
@@ -24,6 +24,7 @@
                                 phy_interface_t iface);

 extern struct mii_bus *of_mdio_find_bus(struct device_node *mdio_np);
+extern struct mii_bus *of_mdio_find_bus_name(const char *name);
 extern int of_mdio_parse_addr(struct device *dev, const struct device_node *np);

 #else /* CONFIG_OF */
@@ -61,6 +62,11 @@
 {
        return NULL;
 }
+
+static inline struct mii_bus *of_mdio_find_bus_name(const char *name)
+{
+       return NULL;
+}

 static inline int of_mdio_parse_addr(struct device *dev,
                                     const struct device_node *np)
